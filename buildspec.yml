version: 0.2

env:
  variables:
    ECR: "928181911649.dkr.ecr.us-east-1.amazonaws.com"

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
  build:
    commands:
      - cd $CODEBUILD_SRC_DIR/ubuntu/14.04
      - docker build -t $ECR/ubuntu:14.04 .
      - cd $CODEBUILD_SRC_DIR/ubuntu/java/openjdk-8
      - docker build -t $ECR/java:openjdk-8 .
      - cd $CODEBUILD_SRC_DIR/ubuntu/scala/2.13
      - docker build -t $ECR/scala:2.13 .
      - cd $CODEBUILD_SRC_DIR/ubuntu/scala-build/0.1.1
      - docker build -t $ECR/scala-build:0.1.1 .
      - cd $CODEBUILD_SRC_DIR/ubuntu/nodejs/10.1.0
      - docker build -t $ECR/nodejs:10.1.0 .
  post_build:
    commands:
      - docker tag $ECR/ubuntu:14.04 $ECR/ubuntu:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - docker push $ECR/ubuntu:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - docker push $ECR/ubuntu:14.04
      - docker tag $ECR/java:openjdk-8 $ECR/java:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - docker push $ECR/java:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - docker push $ECR/java:openjdk-8
      - docker tag $ECR/scala:2.13 $ECR/scala:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - docker push $ECR/scala:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - docker push $ECR/scala:2.13
      - docker tag $ECR/scala-build:0.1.1 $ECR/scala-build:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - docker push $ECR/scala-build:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - docker push $ECR/scala-build:0.1.1
      - docker tag $ECR/nodejs:10.1.0 $ECR/nodejs:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - docker push $ECR/nodejs:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - docker push $ECR/nodejs:10.1.0
